PETrialTest_SDN301m_SP23
SUMMER 23
Subject: SDN301m
Duration: 90 minutes

INSTRUCTIONS
Please read the instructions carefully before doing the questions.
•	You are NOT allowed to use any device to share data with others.
•	You must use Visual Studio Code, MongoDBCompass, MongoDB V6 for your development tools.  

IMPORTANT – before you start doing your solution, MUST do the following steps:
1.	Please check before you submit your work, no syntax error(s) in the submitted PE. 
2.	The data for all collections must be gotten from categories.json, orchids.json and users.json file.
3.	If there are syntax errors or compilation errors in your PE program, you will not pass the PE requirements, the mark will be 0.
4.	Create a new project in Visual Studio Code named SDN301MPE_SU23_StudentCode.
5.	You must create Mongo database with the name SDN301MPE_ SU23_StudentCodeDB. 
Implement a part of Orchids Management System. The situation is described as a category that has many orchids involved and an orchid belongs to a category. 
Your database contains 3 collections, the schema as follow:
category ({ 
categoryName: {String, require: true}
},{ timestamps: true, });
orchid ({
orchidName:{ type: String, require: true},
price:{type: currency, require: true},
isNature:{type: Boolean, default: false}
category:{type: mongoose.Schema.Types.ObjectId, ref: "Categories", require: true},
},{ timestamps: true, });
 

user ({ 
username{ type: String, require: true},
password{ type: String, require: true},
},{ timestamps: true, });



Task 01 (1.0 mark). Using Express generator for developing the REST API server, creating related models then migrate to database named SDN301MPE_SU23_StudentCodeDB (MongoDB).
Task 02 (5.0 marks) Create a full-fledged REST API server to category collection, you must use JWT for authenticating API.
-	Implement CRUD actions with category collection.
Task 03 (4.0 marks). Client application for orchid management
Student must choose one of template engines (EJS, HANDLEBARS, PUG…) with Express for building the views 
1.	Authentication function
At the login view, the user must provide the username and password correctly (password will encrypted by bcrypt library and stored at user collection). All CRUD actions are required with authentication. In the case login unsuccessfully, display the messages which involve the errors. The data of user should store at user collection and come from users.json. After successful login will redirect to dashboard view.
2.	Check if logging in successfully, show the table that contains all the list of orchids. 
3.	Check if logging in successfully, delete the selected item with the confirmation.
4.	Check if login successfully, add new item with the requirements:
-	All fields are required.
-	Value for orchidName includes a-z, A-Z, /, space and digit 0-9. Each word of the orchidName must begin with a capital letter.
-	The isNature value must be a toggle control.
-	The category field must be a select control, the data in the select must appear as categoryName which is taken from category collection.
5.	Check if login successfully, update the list of orchids, all the controls require same of adding function.

Nhiệm vụ 01 (1,0 điểm). Sử dụng Express Generator để phát triển máy chủ REST API, tạo các mô hình liên quan sau đó di chuyển sang cơ sở dữ liệu có tên SDN301MPE_SU23_StudentCodeDB (MongoDB).
Nhiệm vụ 02 (5.0 điểm) Tạo một máy chủ REST API chính thức để sưu tập danh mục, bạn phải sử dụng JWT để xác thực API.
- Thực hiện các hành động CRUD với bộ sưu tập danh mục.
Nhiệm vụ 03 (4,0 điểm). Ứng dụng khách hàng để quản lý hoa lan
Sinh viên phải chọn một trong các công cụ tạo mẫu (EJS, HANDLEBARS, PUG…) với Express để xây dựng chế độ xem
1. Chức năng xác thực
Ở giao diện đăng nhập, người dùng phải cung cấp chính xác tên người dùng và mật khẩu (mật khẩu sẽ được mã hóa bởi thư viện bcrypt và được lưu trữ tại bộ sưu tập của người dùng). Tất cả các hành động CRUD đều được yêu cầu xác thực. Trong trường hợp đăng nhập không thành công, hiển thị thông báo liên quan đến lỗi. Dữ liệu của người dùng sẽ được lưu trữ tại bộ sưu tập của người dùng và đến từ user.json. Sau khi đăng nhập thành công sẽ chuyển hướng đến chế độ xem bảng điều khiển.
2. Kiểm tra đăng nhập thành công, hiện bảng chứa toàn bộ danh sách hoa lan.
3. Kiểm tra xem đăng nhập thành công hay không, xóa mục đã chọn kèm theo xác nhận.
4. Kiểm tra đăng nhập thành công, thêm mục mới với yêu cầu:
- Tất cả các trường là bắt buộc.
- Giá trị cho phong lanName bao gồm a-z, A-Z, /, dấu cách và chữ số 0-9. Mỗi từ của OrlanName phải bắt đầu bằng chữ in hoa.
- Giá trị isNature phải là điều khiển chuyển đổi.
- Trường danh mục phải là điều khiển chọn, dữ liệu trong phần chọn phải xuất hiện dưới dạng Tên danh mục được lấy từ bộ sưu tập danh mục.
5. Kiểm tra xem đăng nhập thành công hay chưa, cập nhật danh sách hoa lan, tất cả các điều khiển đều yêu cầu chức năng thêm tương tự.